
- @_uses_fluo = true

%h1 workitem #{@workitem.fei.wfid}/#{@workitem.fei.expid}

%canvas#fluo

%ul
  %li fei: #{@workitem.fei.to_s}
  %li participant: #{@workitem.participant_name}
  %li dispatched: #{@workitem.dispatched_at}
  %li last modified: #{@workitem.h.put_at}
  %li expressions:
  %li workitems of this process: #{link_to "GET /_ruote/workitems/#{@workitem.fei.wfid}", "/_ruote/workitems/#{@workitem.fei.wfid}" }

%form{ :method => 'post' }
  %input{ :type => 'hidden', :name => '_method', :value => 'put' }
  %input{ :type => 'hidden', :name => '_procced', :value => '1' }
  %div
    %label{ :for => "fields" } Fields
    %textarea{ :name => "fields", :cols => 80, :rows => 10 }
      = Rufus::Json.encode( @workitem.fields )
    %span.description The current workitem fields in JSON format
  %div
    %input{ :type => 'checkbox', :name => '_proceed', :value => '1' }
    %label{ :for => '_proceed' } Proceed the workflow (_proceed=1)
    %span.description Check to let the workflow proceed, leave unchecked to just update workitem fields
  %div
    %input{ :type => 'submit', :value => "PUT /_ruote/workitems/#{@workitem.fei.wfid}/#{@workitem.fei.expid}" }

:javascript
  var proc_rep = #{process_tree( @workitem )};
  Fluo.renderFlow( 'fluo', proc_rep, { 'workitems' : ['#{@workitem.fei.expid}'] } );
  Fluo.crop('fluo');

